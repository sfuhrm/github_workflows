#
# Build a Maven project
#
name: Java CI with Maven

on:
  workflow_call:
    inputs:
      java_version:
        required: false
        type: string
        default: '21'
        description: "Stringified JSON object listing the Java releases to build the software with (i.e. 11)."
      maven_target:
        required: false
        type: string
        default: package
        description: "The Maven target to build, defaults to 'package'."
      artifact_name:
        required: true
        type: string
        description: "The artifact name to upload"
      artifact_path:
        required: true
        type: string
        description: "The path of the artifact to upload"
    outputs:
      maven_version:
        description: "The Maven project version of the artifact. Example '1.1.2-SNAPSHOT'"
        value: ${{ jobs.version.outputs.version }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_version: ${{fromJson(inputs.java_version)}}
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:

    - name: Print inputs
      run: |
        echo java_version=${{ inputs.java_version }}
        echo maven_target=${{ inputs.maven_target }}
        echo artifact_name=${{ inputs.artifact_name }}
        echo artifact_path=${{ inputs.artifact_path }}

    - uses: actions/checkout@v3

    - name: Set up JDK ${{ matrix.java_version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java_version }}
        distribution: temurin

    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Extract current maven version
      run: echo "version=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
      id: version
      shell: bash          

    - name: Build with Maven
      run: mvn -B ${{ inputs.maven_target }} --file pom.xml

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}_${{ inputs.java_version }}
        path: ${{ inputs.artifact_path }}
