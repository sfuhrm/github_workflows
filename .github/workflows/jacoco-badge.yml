name: Jacoco Coverage

on:
  workflow_call:
    inputs:
      java_version:
        required: false
        type: string
        default: 21
        description: "The Java release to build the software with (i.e. 11)."
      maven_target:
        required: false
        type: string
        default: test
        description: "The Maven target to build, defaults to 'test'."
      artifact_name:
        required: true
        type: string
        description: "The artifact name of the coverage report to upload"
      artifact_path:
        required: true
        type: string
        description: "The path of the artifact of the coverage report to upload"
      jacoco_csv_path:
        required: true
        type: string
        description: "Stringified JSON object listing of the path of the jacoco CSV file in the project"
      badge_branch:
        required: false
        type: string
        description: "Branch name where to put the badge image"
        default: gh-pages

jobs:
  jacoco-coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK ${{ inputs.java_version }}
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: ${{ inputs.java_version }}

    - name: Build with Maven
      run: mvn -B ${{ inputs.maven_target }}

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.11.0
      with:
        jacoco-csv-file: ${{fromJson(inputs.jacoco_csv_path }}

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - uses: casperdcl/push-dir@v1
      with:
        message: update static site
        branch: ${{ inputs.badge_branch }}
        dir: .github/badges
        history: false
        nojekyll: true

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        path: ${{ inputs.artifact_path }}
